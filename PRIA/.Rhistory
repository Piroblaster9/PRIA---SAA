theme_minimal()
install.packages("readr")
install.packages("ggradar")
install.packages("ggradar")
# Instalación de paquetes si no están instalados
if (!require("ggradar")) {
install.packages("ggradar")
}
if (!require("devtools")) {
install.packages("devtools")
}
if (!requireNamespace("ggradar", quietly = TRUE)) {
devtools::install_github("ricardo-bion/ggradar")
}
if (!require("readr")) {
install.packages("readr")
}
# Carga de librerías
library(ggradar)
library(readr)
# Lectura del archivo CSV
df <- read.csv('TrumpCards.csv')
# Función para el radar
radartt <- function(baraja, pers) {
df_filtrado <- baraja[baraja$Nombre %in% pers, ]
df_para_radar <- df_filtrado[, c("Poder", "Convivencia", "Liante", "Atractivo", "Locura")]
# Escalamos los datos por rango para cada columna numérica
df_escalado <- as.data.frame(lapply(df_para_radar, function(x) (x - min(x)) / (max(x) - min(x))))
# Añadimos la columna de nombres
df_escalado$Nombre <- df_filtrado$Nombre
df_escalado <- df_escalado[, c("Nombre", "Poder", "Convivencia", "Liante", "Atractivo", "Locura")]
ggradar(df_escalado,
axis.labels = c("Poder", "Convivencia", "Liante", "Atractivo", "Locura"),
grid.min = 0,
grid.mid = 0.7,
grid.max = 1,
grid.label.size = 6,
legend.text.size = 10)
}
# Llamada a la función radartt después de leer el archivo CSV
radartt(df, c("Lola", "Berta", "Antonio Recio", "Amador", "Coque"))
# Carga de librerías adicionales
library(dplyr)
# Función para filtrar y asignar rutas de imágenes
imagett <- function(baraja, pers, images) {
nombres_personajes <- pers
rutas_imagenes <- images
df_filtrado <- dplyr::filter(baraja, Nombre %in% pers)
# Crear una nueva columna "Imagen" y asignar las rutas
df_filtrado <- dplyr::mutate(df_filtrado, Imagen = rutas_imagenes[match(Nombre, nombres_personajes)])
return(df_filtrado)
}
# Llamada a la función con tus datos
df_filtrado <- imagett(df, c("Lola", "Coque", "Berta", "Antonio Recio", "Amador"), c("imagenes/Lola.jpg", "imagenes/Coque.jpg", "imagenes/Berta.jpg", "imagenes/Antonio_Recio.jpg", "imagenes/Amador.jpg"))
print(df_filtrado)
# Gráfico con ggplot2 y ggimg
library(ggplot2)
library(ggimg)
library(dplyr)
ggplot(df_filtrado) +
geom_rect_img(aes(
xmin = Poder - 0.5,
xmax = Poder + 0.5,
ymin = Convivencia - 0.5,
ymax = Convivencia + 0.5,
img = Imagen
)) +
theme_minimal()
# Instalación de paquetes si no están instalados
if (!require("ggradar")) {
install.packages("ggradar")
}
if (!require("devtools")) {
install.packages("devtools")
}
if (!requireNamespace("ggradar", quietly = TRUE)) {
devtools::install_github("ricardo-bion/ggradar")
}
if (!require("readr")) {
install.packages("readr")
}
# Carga de librerías
library(ggradar)
library(readr)
# Lectura del archivo CSV
df <- read.csv('TrumpCards.csv')
# Función para el radar
radartt <- function(baraja, pers) {
df_filtrado <- baraja[baraja$Nombre %in% pers, ]
df_para_radar <- df_filtrado[, c("Poder", "Convivencia", "Liante", "Atractivo", "Locura")]
# Escalamos los datos por rango para cada columna numérica
df_escalado <- as.data.frame(lapply(df_para_radar, function(x) (x - min(x)) / (max(x) - min(x))))
# Añadimos la columna de nombres
df_escalado$Nombre <- df_filtrado$Nombre
df_escalado <- df_escalado[, c("Nombre", "Poder", "Convivencia", "Liante", "Atractivo", "Locura")]
ggradar(df_escalado,
axis.labels = c("Poder", "Convivencia", "Liante", "Atractivo", "Locura"),
grid.min = 0,
grid.mid = 0.7,
grid.max = 1,
grid.label.size = 6,
legend.text.size = 10)
}
# Llamada a la función radartt después de leer el archivo CSV
radartt(df, c("Lola", "Berta", "Antonio Recio", "Amador", "Coque"))
# Carga de librerías adicionales
library(dplyr)
# Función para filtrar y asignar rutas de imágenes
imagett <- function(baraja, pers, images) {
nombres_personajes <- pers
rutas_imagenes <- images
df_filtrado <- dplyr::filter(baraja, Nombre %in% pers)
# Crear una nueva columna "Imagen" y asignar las rutas
df_filtrado <- dplyr::mutate(df_filtrado, Imagen = rutas_imagenes[match(Nombre, nombres_personajes)])
return(df_filtrado)
}
# Llamada a la función con tus datos
df_filtrado <- imagett(df, c("Lola", "Coque", "Berta", "Antonio Recio", "Amador"), c("imagenes/Lola.jpg", "imagenes/Coque.jpg", "imagenes/Berta.jpg", "imagenes/Antonio_Recio.jpg", "imagenes/Amador.jpg"))
print(df_filtrado)
# Gráfico con ggplot2 y ggimg
library(ggplot2)
library(ggimg)
library(dplyr)
ggplot(df_filtrado) +
geom_rect_img(aes(
xmin = Poder - 0.1,
xmax = Poder + 0.1,
ymin = Convivencia - 0.1,
ymax = Convivencia + 0.1,
img = Imagen
)) +
theme_minimal()
# Instalación de paquetes si no están instalados
if (!require("ggradar")) {
install.packages("ggradar")
}
if (!require("devtools")) {
install.packages("devtools")
}
if (!requireNamespace("ggradar", quietly = TRUE)) {
devtools::install_github("ricardo-bion/ggradar")
}
if (!require("readr")) {
install.packages("readr")
}
# Carga de librerías
library(ggradar)
library(readr)
# Lectura del archivo CSV
df <- read.csv('TrumpCards.csv')
# Función para el radar
radartt <- function(baraja, pers) {
df_filtrado <- baraja[baraja$Nombre %in% pers, ]
df_para_radar <- df_filtrado[, c("Poder", "Convivencia", "Liante", "Atractivo", "Locura")]
# Escalamos los datos por rango para cada columna numérica
df_escalado <- as.data.frame(lapply(df_para_radar, function(x) (x - min(x)) / (max(x) - min(x))))
# Añadimos la columna de nombres
df_escalado$Nombre <- df_filtrado$Nombre
df_escalado <- df_escalado[, c("Nombre", "Poder", "Convivencia", "Liante", "Atractivo", "Locura")]
ggradar(df_escalado,
axis.labels = c("Poder", "Convivencia", "Liante", "Atractivo", "Locura"),
grid.min = 0,
grid.mid = 0.7,
grid.max = 1,
grid.label.size = 6,
legend.text.size = 10)
}
# Llamada a la función radartt después de leer el archivo CSV
radartt(df, c("Lola", "Berta", "Antonio Recio", "Amador", "Coque"))
# Carga de librerías adicionales
library(dplyr)
# Función para filtrar y asignar rutas de imágenes
imagett <- function(baraja, pers, images) {
nombres_personajes <- pers
rutas_imagenes <- images
df_filtrado <- dplyr::filter(baraja, Nombre %in% pers)
# Crear una nueva columna "Imagen" y asignar las rutas
df_filtrado <- dplyr::mutate(df_filtrado, Imagen = rutas_imagenes[match(Nombre, nombres_personajes)])
return(df_filtrado)
}
# Llamada a la función con tus datos
df_filtrado <- imagett(df, c("Lola", "Coque", "Berta", "Antonio Recio", "Amador"), c("imagenes/Lola.jpg", "imagenes/Coque.jpg", "imagenes/Berta.jpg", "imagenes/Antonio_Recio.jpg", "imagenes/Amador.jpg"))
print(df_filtrado)
# Gráfico con ggplot2 y ggimg
library(ggplot2)
library(ggimg)
library(dplyr)
ggplot(df_filtrado) +
geom_rect_img(aes(
xmin = Poder - 1,
xmax = Poder + 1,
ymin = Convivencia - 1,
ymax = Convivencia + 1,
img = Imagen
)) +
theme_minimal()
# Instalación de paquetes si no están instalados
if (!require("ggradar")) {
install.packages("ggradar")
}
if (!require("devtools")) {
install.packages("devtools")
}
if (!requireNamespace("ggradar", quietly = TRUE)) {
devtools::install_github("ricardo-bion/ggradar")
}
if (!require("readr")) {
install.packages("readr")
}
# Carga de librerías
library(ggradar)
library(readr)
# Lectura del archivo CSV
df <- read.csv('TrumpCards.csv')
# Función para el radar
radartt <- function(baraja, pers) {
df_filtrado <- baraja[baraja$Nombre %in% pers, ]
df_para_radar <- df_filtrado[, c("Poder", "Convivencia", "Liante", "Atractivo", "Locura")]
# Escalamos los datos por rango para cada columna numérica
df_escalado <- as.data.frame(lapply(df_para_radar, function(x) (x - min(x)) / (max(x) - min(x))))
# Añadimos la columna de nombres
df_escalado$Nombre <- df_filtrado$Nombre
df_escalado <- df_escalado[, c("Nombre", "Poder", "Convivencia", "Liante", "Atractivo", "Locura")]
ggradar(df_escalado,
axis.labels = c("Poder", "Convivencia", "Liante", "Atractivo", "Locura"),
grid.min = 0,
grid.mid = 0.7,
grid.max = 1,
grid.label.size = 6,
legend.text.size = 10)
}
# Llamada a la función radartt después de leer el archivo CSV
radartt(df, c("Lola", "Berta", "Antonio Recio", "Amador", "Coque"))
# Carga de librerías adicionales
library(dplyr)
# Función para filtrar y asignar rutas de imágenes
imagett <- function(baraja, pers, images) {
nombres_personajes <- pers
rutas_imagenes <- images
df_filtrado <- dplyr::filter(baraja, Nombre %in% pers)
# Crear una nueva columna "Imagen" y asignar las rutas
df_filtrado <- dplyr::mutate(df_filtrado, Imagen = rutas_imagenes[match(Nombre, nombres_personajes)])
return(df_filtrado)
}
# Llamada a la función con tus datos
df_filtrado <- imagett(df, c("Lola", "Coque", "Berta", "Antonio Recio", "Amador"), c("imagenes/Lola.jpg", "imagenes/Coque.jpg", "imagenes/Berta.jpg", "imagenes/Antonio_Recio.jpg", "imagenes/Amador.jpg"))
print(df_filtrado)
# Gráfico con ggplot2 y ggimg
library(ggplot2)
library(ggimg)
library(dplyr)
ggplot(df_filtrado) +
geom_rect_img(aes(
xmin = Poder - 5,
xmax = Poder + 5,
ymin = Convivencia - 5,
ymax = Convivencia + 5,
img = Imagen
)) +
theme_minimal()
# Instalación de paquetes si no están instalados
if (!require("ggradar")) {
install.packages("ggradar")
}
if (!require("devtools")) {
install.packages("devtools")
}
if (!requireNamespace("ggradar", quietly = TRUE)) {
devtools::install_github("ricardo-bion/ggradar")
}
if (!require("readr")) {
install.packages("readr")
}
# Carga de librerías
library(ggradar)
library(readr)
# Lectura del archivo CSV
df <- read.csv('TrumpCards.csv')
# Función para el radar
radartt <- function(baraja, pers) {
df_filtrado <- baraja[baraja$Nombre %in% pers, ]
df_para_radar <- df_filtrado[, c("Poder", "Convivencia", "Liante", "Atractivo", "Locura")]
# Escalamos los datos por rango para cada columna numérica
df_escalado <- as.data.frame(lapply(df_para_radar, function(x) (x - min(x)) / (max(x) - min(x))))
# Añadimos la columna de nombres
df_escalado$Nombre <- df_filtrado$Nombre
df_escalado <- df_escalado[, c("Nombre", "Poder", "Convivencia", "Liante", "Atractivo", "Locura")]
ggradar(df_escalado,
axis.labels = c("Poder", "Convivencia", "Liante", "Atractivo", "Locura"),
grid.min = 0,
grid.mid = 0.7,
grid.max = 1,
grid.label.size = 6,
legend.text.size = 10)
}
# Llamada a la función radartt después de leer el archivo CSV
radartt(df, c("Lola", "Berta", "Antonio Recio", "Amador", "Coque"))
# Carga de librerías adicionales
library(dplyr)
# Función para filtrar y asignar rutas de imágenes
imagett <- function(baraja, pers, images) {
nombres_personajes <- pers
rutas_imagenes <- images
df_filtrado <- dplyr::filter(baraja, Nombre %in% pers)
# Crear una nueva columna "Imagen" y asignar las rutas
df_filtrado <- dplyr::mutate(df_filtrado, Imagen = rutas_imagenes[match(Nombre, nombres_personajes)])
return(df_filtrado)
}
# Llamada a la función con tus datos
df_filtrado <- imagett(df, c("Lola", "Coque", "Berta", "Antonio Recio", "Amador"), c("imagenes/Lola.jpg", "imagenes/Coque.jpg", "imagenes/Berta.jpg", "imagenes/Antonio_Recio.jpg", "imagenes/Amador.jpg"))
print(df_filtrado)
# Gráfico con ggplot2 y ggimg
library(ggplot2)
library(ggimg)
library(dplyr)
ggplot(df_filtrado) +
geom_rect_img(aes(
xmin = Poder - 2,
xmax = Poder + 2,
ymin = Convivencia - 2,
ymax = Convivencia + 2,
img = Imagen
)) +
theme_minimal()
# Instalación de paquetes si no están instalados
if (!require("ggradar")) {
install.packages("ggradar")
}
if (!require("devtools")) {
install.packages("devtools")
}
if (!requireNamespace("ggradar", quietly = TRUE)) {
devtools::install_github("ricardo-bion/ggradar")
}
if (!require("readr")) {
install.packages("readr")
}
# Carga de librerías
library(ggradar)
library(readr)
# Lectura del archivo CSV
df <- read.csv('TrumpCards.csv')
# Función para el radar
radartt <- function(baraja, pers) {
df_filtrado <- baraja[baraja$Nombre %in% pers, ]
df_para_radar <- df_filtrado[, c("Poder", "Convivencia", "Liante", "Atractivo", "Locura")]
# Escalamos los datos por rango para cada columna numérica
df_escalado <- as.data.frame(lapply(df_para_radar, function(x) (x - min(x)) / (max(x) - min(x))))
# Añadimos la columna de nombres
df_escalado$Nombre <- df_filtrado$Nombre
df_escalado <- df_escalado[, c("Nombre", "Poder", "Convivencia", "Liante", "Atractivo", "Locura")]
ggradar(df_escalado,
axis.labels = c("Poder", "Convivencia", "Liante", "Atractivo", "Locura"),
grid.min = 0,
grid.mid = 0.7,
grid.max = 1,
grid.label.size = 6,
legend.text.size = 10)
}
# Llamada a la función radartt después de leer el archivo CSV
radartt(df, c("Lola", "Berta", "Antonio Recio", "Amador", "Coque"))
# Carga de librerías adicionales
library(dplyr)
# Función para filtrar y asignar rutas de imágenes
imagett <- function(baraja, pers, images) {
nombres_personajes <- pers
rutas_imagenes <- images
df_filtrado <- dplyr::filter(baraja, Nombre %in% pers)
# Crear una nueva columna "Imagen" y asignar las rutas
df_filtrado <- dplyr::mutate(df_filtrado, Imagen = rutas_imagenes[match(Nombre, nombres_personajes)])
return(df_filtrado)
}
# Llamada a la función con tus datos
df_filtrado <- imagett(df, c("Lola", "Coque", "Berta", "Antonio Recio", "Amador"), c("imagenes/Lola.jpg", "imagenes/Coque.jpg", "imagenes/Berta.jpg", "imagenes/Antonio_Recio.jpg", "imagenes/Amador.jpg"))
print(df_filtrado)
# Gráfico con ggplot2 y ggimg
library(ggplot2)
library(ggimg)
library(dplyr)
ggplot(df_filtrado) +
geom_rect_img(aes(
xmin = Poder - 1,
xmax = Poder + 1,
ymin = Convivencia - 1,
ymax = Convivencia + 1,
img = Imagen
)) +
theme_minimal()
# Instalación de paquetes si no están instalados
if (!require("ggradar")) {
install.packages("ggradar")
}
if (!require("devtools")) {
install.packages("devtools")
}
if (!requireNamespace("ggradar", quietly = TRUE)) {
devtools::install_github("ricardo-bion/ggradar")
}
if (!require("readr")) {
install.packages("readr")
}
# Carga de librerías
library(ggradar)
library(readr)
# Lectura del archivo CSV
df <- read.csv('TrumpCards.csv')
# Función para el radar
radartt <- function(baraja, pers) {
df_filtrado <- baraja[baraja$Nombre %in% pers, ]
df_para_radar <- df_filtrado[, c("Poder", "Convivencia", "Liante", "Atractivo", "Locura")]
# Escalamos los datos por rango para cada columna numérica
df_escalado <- as.data.frame(lapply(df_para_radar, function(x) (x - min(x)) / (max(x) - min(x))))
# Añadimos la columna de nombres
df_escalado$Nombre <- df_filtrado$Nombre
df_escalado <- df_escalado[, c("Nombre", "Poder", "Convivencia", "Liante", "Atractivo", "Locura")]
ggradar(df_escalado,
axis.labels = c("Poder", "Convivencia", "Liante", "Atractivo", "Locura"),
grid.min = 0,
grid.mid = 0.7,
grid.max = 1,
grid.label.size = 6,
legend.text.size = 10)
}
# Llamada a la función radartt después de leer el archivo CSV
radartt(df, c("Lola", "Berta", "Antonio Recio", "Amador", "Coque"))
# Carga de librerías adicionales
library(dplyr)
# Función para filtrar y asignar rutas de imágenes
imagett <- function(baraja, pers, images) {
nombres_personajes <- pers
rutas_imagenes <- images
df_filtrado <- dplyr::filter(baraja, Nombre %in% pers)
# Crear una nueva columna "Imagen" y asignar las rutas
df_filtrado <- dplyr::mutate(df_filtrado, Imagen = rutas_imagenes[match(Nombre, nombres_personajes)])
return(df_filtrado)
}
# Llamada a la función con tus datos
df_filtrado <- imagett(df, c("Lola", "Coque", "Berta", "Antonio Recio", "Amador"), c("imagenes/Lola.jpg", "imagenes/Coque.jpg", "imagenes/Berta.jpg", "imagenes/Antonio_Recio.jpg", "imagenes/Amador.jpg"))
print(df_filtrado)
library(ggplot2)
library(ggimg)
library(dplyr)
#Aquí les pongo el +1 o -1
ggplot(df_filtrado) +
geom_rect_img(aes(
xmin = Poder - 2,
xmax = Poder + 2,
ymin = Convivencia - 1,
ymax = Convivencia + 1,
img = Imagen
)) +
theme_minimal()
# Instalación de paquetes si no están instalados
if (!require("ggradar")) {
install.packages("ggradar")
}
if (!require("devtools")) {
install.packages("devtools")
}
if (!requireNamespace("ggradar", quietly = TRUE)) {
devtools::install_github("ricardo-bion/ggradar")
}
if (!require("readr")) {
install.packages("readr")
}
library(ggradar)
library(readr)
# Lectura del archivo CSV
datos_trump <- read.csv('TrumpCards.csv')
# Función para el radar
analisis_radar <- function(datos, personas) {
datos_filtrados <- datos[datos$Nombre %in% personas, ]
datos_radar <- datos_filtrados[, c("Poder", "Convivencia", "Liante", "Atractivo", "Locura")]
datos_escalados <- as.data.frame(lapply(datos_radar, function(x) (x - min(x)) / (max(x) - min(x))))
datos_escalados$Nombre <- datos_filtrados$Nombre
datos_escalados <- datos_escalados[, c("Nombre", "Poder", "Convivencia", "Liante", "Atractivo", "Locura")]
ggradar(datos_escalados,
axis.labels = c("Poder", "Convivencia", "Liante", "Atractivo", "Locura"),
grid.min = 0,
grid.mid = 0.7,
grid.max = 1,
grid.label.size = 6,
legend.text.size = 10)
}
# Llamada a la función analisis_radar después de leer el archivo CSV
analisis_radar(datos_trump, c("Lola", "Berta", "Antonio Recio", "Amador", "Coque"))
# Carga de librerías adicionales
library(dplyr)
# Función para filtrar y asignar rutas de imágenes
proceso_imagenes <- function(datos, personas, imagenes) {
nombres_personajes <- personas
rutas_imagenes <- imagenes
datos_filtrados <- dplyr::filter(datos, Nombre %in% personas)
datos_filtrados <- dplyr::mutate(datos_filtrados, Imagen = rutas_imagenes[match(Nombre, nombres_personajes)])
return(datos_filtrados)
}
# Llamada a la función con tus datos
datos_filtrados <- proceso_imagenes(datos_trump, c("Lola", "Coque", "Berta", "Antonio Recio", "Amador"), c("imagenes/Lola.jpg", "imagenes/Coque.jpg", "imagenes/Berta.jpg", "imagenes/Antonio_Recio.jpg", "imagenes/Amador.jpg"))
print(datos_filtrados)
# Gráfico con ggplot2 y ggimg
library(ggplot2)
library(ggimg)
library(dplyr)
ggplot(datos_filtrados) +
geom_rect_img(aes(
xmin = Poder - 1,
xmax = Poder + 1,
ymin = Convivencia - 1,
ymax = Convivencia + 1,
img = Imagen
)) +
theme_minimal()
